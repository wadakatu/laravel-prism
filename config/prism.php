<?php

return [
    /*
    |--------------------------------------------------------------------------
    | API Documentation Title
    |--------------------------------------------------------------------------
    |
    | The title of your API documentation. This will be displayed at the top
    | of the generated documentation.
    |
    */
    'title' => env('APP_NAME', 'Laravel').' API',

    /*
    |--------------------------------------------------------------------------
    | API Version
    |--------------------------------------------------------------------------
    |
    | The version of your API. This will be included in the OpenAPI spec.
    |
    */
    'version' => '1.0.0',

    /*
    |--------------------------------------------------------------------------
    | API Description
    |--------------------------------------------------------------------------
    |
    | A description of your API that will be included in the documentation.
    |
    */
    'description' => 'API documentation generated by Laravel Prism',

    /*
    |--------------------------------------------------------------------------
    | Route Patterns
    |--------------------------------------------------------------------------
    |
    | The route patterns that should be included in the documentation.
    | Use wildcards to match multiple routes.
    |
    */
    'route_patterns' => [
        'api/*',
        'api/v1/*',
        'api/v2/*',
    ],

    /*
    |--------------------------------------------------------------------------
    | Excluded Routes
    |--------------------------------------------------------------------------
    |
    | Specific routes that should be excluded from the documentation.
    |
    */
    'excluded_routes' => [
        'api/health',
        'api/ping',
    ],

    /*
    |--------------------------------------------------------------------------
    | Authentication Configuration
    |--------------------------------------------------------------------------
    |
    | Configure how authentication is detected and documented.
    |
    */
    'authentication' => [
        /*
        | Global authentication settings
        */
        'global' => [
            'enabled' => false,
            'scheme' => [
                'type' => 'http',
                'scheme' => 'bearer',
                'bearerFormat' => 'JWT',
                'description' => 'Global JWT authentication',
                'name' => 'globalAuth',
            ],
            'required' => false,
        ],

        /*
        | Custom authentication schemes
        | Map middleware names to OpenAPI security schemes
        */
        'custom_schemes' => [
            // 'custom-auth' => [
            //     'type' => 'apiKey',
            //     'in' => 'header',
            //     'name' => 'X-Custom-Token',
            //     'description' => 'Custom API token',
            //     'name' => 'customAuth',
            // ],
        ],

        /*
        | Pattern-based authentication
        | Apply authentication to routes matching patterns
        */
        'patterns' => [
            // 'api/admin/*' => [
            //     'scheme' => [...],
            //     'required' => true,
            // ],
        ],

        /*
        | OAuth2 configuration for Passport
        */
        'oauth2' => [
            'authorization_url' => env('APP_URL').'/oauth/authorize',
            'token_url' => env('APP_URL').'/oauth/token',
            'refresh_url' => env('APP_URL').'/oauth/token',
            'scopes' => [
                // 'read' => 'Read access',
                // 'write' => 'Write access',
            ],
        ],
    ],

    /*
    |--------------------------------------------------------------------------
    | Cache Configuration
    |--------------------------------------------------------------------------
    |
    | Configure the caching behavior for analysis results.
    |
    */
    'cache' => [
        /*
        |--------------------------------------------------------------------------
        | Enable Cache
        |--------------------------------------------------------------------------
        |
        | When enabled, analysis results will be cached to speed up subsequent
        | documentation generation.
        |
        */
        'enabled' => env('PRISM_CACHE_ENABLED', true),

        /*
        |--------------------------------------------------------------------------
        | Cache Directory
        |--------------------------------------------------------------------------
        |
        | The directory where cache files will be stored.
        |
        */
        'directory' => storage_path('app/prism/cache'),

        /*
        |--------------------------------------------------------------------------
        | Cache TTL
        |--------------------------------------------------------------------------
        |
        | Time to live for cache files in seconds. Set to null for no expiration.
        |
        */
        'ttl' => env('PRISM_CACHE_TTL', null),

        /*
        |--------------------------------------------------------------------------
        | Watch Files
        |--------------------------------------------------------------------------
        |
        | Additional files to watch for changes that should invalidate the cache.
        |
        */
        'watch_files' => [
            base_path('composer.json'),
            base_path('composer.lock'),
        ],
    ],
];
